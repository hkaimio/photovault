// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: change_protos.proto

package org.photovault.replication;

public final class ChangeProtos {
  private ChangeProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum FieldChangeType
      implements com.google.protobuf.ProtocolMessageEnum {
    VALUE_CHANGE(0, 1),
    SET_CHANGE(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static FieldChangeType valueOf(int value) {
      switch (value) {
        case 1: return VALUE_CHANGE;
        case 2: return SET_CHANGE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<FieldChangeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FieldChangeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FieldChangeType>() {
            public FieldChangeType findValueByNumber(int number) {
              return FieldChangeType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final FieldChangeType[] VALUES = {
      VALUE_CHANGE, SET_CHANGE, 
    };
    public static FieldChangeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private FieldChangeType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      org.photovault.replication.ChangeProtos.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:FieldChangeType)
  }
  
  public static final class FieldChange extends
      com.google.protobuf.GeneratedMessage {
    // Use FieldChange.newBuilder() to construct.
    private FieldChange() {
      initFields();
    }
    private FieldChange(boolean noInit) {}
    
    private static final FieldChange defaultInstance;
    public static FieldChange getDefaultInstance() {
      return defaultInstance;
    }
    
    public FieldChange getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.internal_static_FieldChange_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.photovault.replication.ChangeProtos.internal_static_FieldChange_fieldAccessorTable;
    }
    
    // required .FieldChangeType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private org.photovault.replication.ChangeProtos.FieldChangeType type_;
    public boolean hasType() { return hasType; }
    public org.photovault.replication.ChangeProtos.FieldChangeType getType() { return type_; }
    
    // required string fieldName = 2;
    public static final int FIELDNAME_FIELD_NUMBER = 2;
    private boolean hasFieldName;
    private java.lang.String fieldName_ = "";
    public boolean hasFieldName() { return hasFieldName; }
    public java.lang.String getFieldName() { return fieldName_; }
    
    // optional .ValueChange valueChange = 3;
    public static final int VALUECHANGE_FIELD_NUMBER = 3;
    private boolean hasValueChange;
    private org.photovault.replication.ChangeProtos.ValueChange valueChange_;
    public boolean hasValueChange() { return hasValueChange; }
    public org.photovault.replication.ChangeProtos.ValueChange getValueChange() { return valueChange_; }
    
    // optional .SetChange setChange = 4;
    public static final int SETCHANGE_FIELD_NUMBER = 4;
    private boolean hasSetChange;
    private org.photovault.replication.ChangeProtos.SetChange setChange_;
    public boolean hasSetChange() { return hasSetChange; }
    public org.photovault.replication.ChangeProtos.SetChange getSetChange() { return setChange_; }
    
    private void initFields() {
      type_ = org.photovault.replication.ChangeProtos.FieldChangeType.VALUE_CHANGE;
      valueChange_ = org.photovault.replication.ChangeProtos.ValueChange.getDefaultInstance();
      setChange_ = org.photovault.replication.ChangeProtos.SetChange.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasFieldName) return false;
      if (hasValueChange()) {
        if (!getValueChange().isInitialized()) return false;
      }
      if (hasSetChange()) {
        if (!getSetChange().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasFieldName()) {
        output.writeString(2, getFieldName());
      }
      if (hasValueChange()) {
        output.writeMessage(3, getValueChange());
      }
      if (hasSetChange()) {
        output.writeMessage(4, getSetChange());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasFieldName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFieldName());
      }
      if (hasValueChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValueChange());
      }
      if (hasSetChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSetChange());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.FieldChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.photovault.replication.ChangeProtos.FieldChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.photovault.replication.ChangeProtos.FieldChange result;
      
      // Construct using org.photovault.replication.ChangeProtos.FieldChange.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.photovault.replication.ChangeProtos.FieldChange();
        return builder;
      }
      
      protected org.photovault.replication.ChangeProtos.FieldChange internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.photovault.replication.ChangeProtos.FieldChange();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.photovault.replication.ChangeProtos.FieldChange.getDescriptor();
      }
      
      public org.photovault.replication.ChangeProtos.FieldChange getDefaultInstanceForType() {
        return org.photovault.replication.ChangeProtos.FieldChange.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.photovault.replication.ChangeProtos.FieldChange build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.photovault.replication.ChangeProtos.FieldChange buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.photovault.replication.ChangeProtos.FieldChange buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.photovault.replication.ChangeProtos.FieldChange returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.photovault.replication.ChangeProtos.FieldChange) {
          return mergeFrom((org.photovault.replication.ChangeProtos.FieldChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.photovault.replication.ChangeProtos.FieldChange other) {
        if (other == org.photovault.replication.ChangeProtos.FieldChange.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasValueChange()) {
          mergeValueChange(other.getValueChange());
        }
        if (other.hasSetChange()) {
          mergeSetChange(other.getSetChange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.photovault.replication.ChangeProtos.FieldChangeType value = org.photovault.replication.ChangeProtos.FieldChangeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 18: {
              setFieldName(input.readString());
              break;
            }
            case 26: {
              org.photovault.replication.ChangeProtos.ValueChange.Builder subBuilder = org.photovault.replication.ChangeProtos.ValueChange.newBuilder();
              if (hasValueChange()) {
                subBuilder.mergeFrom(getValueChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setValueChange(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.photovault.replication.ChangeProtos.SetChange.Builder subBuilder = org.photovault.replication.ChangeProtos.SetChange.newBuilder();
              if (hasSetChange()) {
                subBuilder.mergeFrom(getSetChange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSetChange(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .FieldChangeType type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public org.photovault.replication.ChangeProtos.FieldChangeType getType() {
        return result.getType();
      }
      public Builder setType(org.photovault.replication.ChangeProtos.FieldChangeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = org.photovault.replication.ChangeProtos.FieldChangeType.VALUE_CHANGE;
        return this;
      }
      
      // required string fieldName = 2;
      public boolean hasFieldName() {
        return result.hasFieldName();
      }
      public java.lang.String getFieldName() {
        return result.getFieldName();
      }
      public Builder setFieldName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder clearFieldName() {
        result.hasFieldName = false;
        result.fieldName_ = getDefaultInstance().getFieldName();
        return this;
      }
      
      // optional .ValueChange valueChange = 3;
      public boolean hasValueChange() {
        return result.hasValueChange();
      }
      public org.photovault.replication.ChangeProtos.ValueChange getValueChange() {
        return result.getValueChange();
      }
      public Builder setValueChange(org.photovault.replication.ChangeProtos.ValueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValueChange = true;
        result.valueChange_ = value;
        return this;
      }
      public Builder setValueChange(org.photovault.replication.ChangeProtos.ValueChange.Builder builderForValue) {
        result.hasValueChange = true;
        result.valueChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeValueChange(org.photovault.replication.ChangeProtos.ValueChange value) {
        if (result.hasValueChange() &&
            result.valueChange_ != org.photovault.replication.ChangeProtos.ValueChange.getDefaultInstance()) {
          result.valueChange_ =
            org.photovault.replication.ChangeProtos.ValueChange.newBuilder(result.valueChange_).mergeFrom(value).buildPartial();
        } else {
          result.valueChange_ = value;
        }
        result.hasValueChange = true;
        return this;
      }
      public Builder clearValueChange() {
        result.hasValueChange = false;
        result.valueChange_ = org.photovault.replication.ChangeProtos.ValueChange.getDefaultInstance();
        return this;
      }
      
      // optional .SetChange setChange = 4;
      public boolean hasSetChange() {
        return result.hasSetChange();
      }
      public org.photovault.replication.ChangeProtos.SetChange getSetChange() {
        return result.getSetChange();
      }
      public Builder setSetChange(org.photovault.replication.ChangeProtos.SetChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSetChange = true;
        result.setChange_ = value;
        return this;
      }
      public Builder setSetChange(org.photovault.replication.ChangeProtos.SetChange.Builder builderForValue) {
        result.hasSetChange = true;
        result.setChange_ = builderForValue.build();
        return this;
      }
      public Builder mergeSetChange(org.photovault.replication.ChangeProtos.SetChange value) {
        if (result.hasSetChange() &&
            result.setChange_ != org.photovault.replication.ChangeProtos.SetChange.getDefaultInstance()) {
          result.setChange_ =
            org.photovault.replication.ChangeProtos.SetChange.newBuilder(result.setChange_).mergeFrom(value).buildPartial();
        } else {
          result.setChange_ = value;
        }
        result.hasSetChange = true;
        return this;
      }
      public Builder clearSetChange() {
        result.hasSetChange = false;
        result.setChange_ = org.photovault.replication.ChangeProtos.SetChange.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FieldChange)
    }
    
    static {
      defaultInstance = new FieldChange(true);
      org.photovault.replication.ChangeProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FieldChange)
  }
  
  public static final class ValueChange extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        ValueChange> {
    // Use ValueChange.newBuilder() to construct.
    private ValueChange() {
      initFields();
    }
    private ValueChange(boolean noInit) {}
    
    private static final ValueChange defaultInstance;
    public static ValueChange getDefaultInstance() {
      return defaultInstance;
    }
    
    public ValueChange getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.internal_static_ValueChange_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.photovault.replication.ChangeProtos.internal_static_ValueChange_fieldAccessorTable;
    }
    
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private int type_ = 0;
    public boolean hasType() { return hasType; }
    public int getType() { return type_; }
    
    // optional int32 intValue = 2;
    public static final int INTVALUE_FIELD_NUMBER = 2;
    private boolean hasIntValue;
    private int intValue_ = 0;
    public boolean hasIntValue() { return hasIntValue; }
    public int getIntValue() { return intValue_; }
    
    // optional double doubleValue = 3;
    public static final int DOUBLEVALUE_FIELD_NUMBER = 3;
    private boolean hasDoubleValue;
    private double doubleValue_ = 0D;
    public boolean hasDoubleValue() { return hasDoubleValue; }
    public double getDoubleValue() { return doubleValue_; }
    
    // optional string stringValue = 4;
    public static final int STRINGVALUE_FIELD_NUMBER = 4;
    private boolean hasStringValue;
    private java.lang.String stringValue_ = "";
    public boolean hasStringValue() { return hasStringValue; }
    public java.lang.String getStringValue() { return stringValue_; }
    
    // optional bool boolValue = 5;
    public static final int BOOLVALUE_FIELD_NUMBER = 5;
    private boolean hasBoolValue;
    private boolean boolValue_ = false;
    public boolean hasBoolValue() { return hasBoolValue; }
    public boolean getBoolValue() { return boolValue_; }
    
    // optional .UUID uuidValue = 6;
    public static final int UUIDVALUE_FIELD_NUMBER = 6;
    private boolean hasUuidValue;
    private org.photovault.common.Types.UUID uuidValue_;
    public boolean hasUuidValue() { return hasUuidValue; }
    public org.photovault.common.Types.UUID getUuidValue() { return uuidValue_; }
    
    private void initFields() {
      uuidValue_ = org.photovault.common.Types.UUID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasUuidValue()) {
        if (!getUuidValue().isInitialized()) return false;
      }
      if (!extensionsAreInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage.ExtendableMessage
        .ExtensionWriter extensionWriter = newExtensionWriter();
      if (hasType()) {
        output.writeInt32(1, getType());
      }
      if (hasIntValue()) {
        output.writeInt32(2, getIntValue());
      }
      if (hasDoubleValue()) {
        output.writeDouble(3, getDoubleValue());
      }
      if (hasStringValue()) {
        output.writeString(4, getStringValue());
      }
      if (hasBoolValue()) {
        output.writeBool(5, getBoolValue());
      }
      if (hasUuidValue()) {
        output.writeMessage(6, getUuidValue());
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getType());
      }
      if (hasIntValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getIntValue());
      }
      if (hasDoubleValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getDoubleValue());
      }
      if (hasStringValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getStringValue());
      }
      if (hasBoolValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getBoolValue());
      }
      if (hasUuidValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUuidValue());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ValueChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.photovault.replication.ChangeProtos.ValueChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.photovault.replication.ChangeProtos.ValueChange, Builder> {
      private org.photovault.replication.ChangeProtos.ValueChange result;
      
      // Construct using org.photovault.replication.ChangeProtos.ValueChange.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.photovault.replication.ChangeProtos.ValueChange();
        return builder;
      }
      
      protected org.photovault.replication.ChangeProtos.ValueChange internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.photovault.replication.ChangeProtos.ValueChange();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.photovault.replication.ChangeProtos.ValueChange.getDescriptor();
      }
      
      public org.photovault.replication.ChangeProtos.ValueChange getDefaultInstanceForType() {
        return org.photovault.replication.ChangeProtos.ValueChange.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.photovault.replication.ChangeProtos.ValueChange build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.photovault.replication.ChangeProtos.ValueChange buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.photovault.replication.ChangeProtos.ValueChange buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.photovault.replication.ChangeProtos.ValueChange returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.photovault.replication.ChangeProtos.ValueChange) {
          return mergeFrom((org.photovault.replication.ChangeProtos.ValueChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.photovault.replication.ChangeProtos.ValueChange other) {
        if (other == org.photovault.replication.ChangeProtos.ValueChange.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIntValue()) {
          setIntValue(other.getIntValue());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.hasStringValue()) {
          setStringValue(other.getStringValue());
        }
        if (other.hasBoolValue()) {
          setBoolValue(other.getBoolValue());
        }
        if (other.hasUuidValue()) {
          mergeUuidValue(other.getUuidValue());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setType(input.readInt32());
              break;
            }
            case 16: {
              setIntValue(input.readInt32());
              break;
            }
            case 25: {
              setDoubleValue(input.readDouble());
              break;
            }
            case 34: {
              setStringValue(input.readString());
              break;
            }
            case 40: {
              setBoolValue(input.readBool());
              break;
            }
            case 50: {
              org.photovault.common.Types.UUID.Builder subBuilder = org.photovault.common.Types.UUID.newBuilder();
              if (hasUuidValue()) {
                subBuilder.mergeFrom(getUuidValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuidValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public int getType() {
        return result.getType();
      }
      public Builder setType(int value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      // optional int32 intValue = 2;
      public boolean hasIntValue() {
        return result.hasIntValue();
      }
      public int getIntValue() {
        return result.getIntValue();
      }
      public Builder setIntValue(int value) {
        result.hasIntValue = true;
        result.intValue_ = value;
        return this;
      }
      public Builder clearIntValue() {
        result.hasIntValue = false;
        result.intValue_ = 0;
        return this;
      }
      
      // optional double doubleValue = 3;
      public boolean hasDoubleValue() {
        return result.hasDoubleValue();
      }
      public double getDoubleValue() {
        return result.getDoubleValue();
      }
      public Builder setDoubleValue(double value) {
        result.hasDoubleValue = true;
        result.doubleValue_ = value;
        return this;
      }
      public Builder clearDoubleValue() {
        result.hasDoubleValue = false;
        result.doubleValue_ = 0D;
        return this;
      }
      
      // optional string stringValue = 4;
      public boolean hasStringValue() {
        return result.hasStringValue();
      }
      public java.lang.String getStringValue() {
        return result.getStringValue();
      }
      public Builder setStringValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringValue = true;
        result.stringValue_ = value;
        return this;
      }
      public Builder clearStringValue() {
        result.hasStringValue = false;
        result.stringValue_ = getDefaultInstance().getStringValue();
        return this;
      }
      
      // optional bool boolValue = 5;
      public boolean hasBoolValue() {
        return result.hasBoolValue();
      }
      public boolean getBoolValue() {
        return result.getBoolValue();
      }
      public Builder setBoolValue(boolean value) {
        result.hasBoolValue = true;
        result.boolValue_ = value;
        return this;
      }
      public Builder clearBoolValue() {
        result.hasBoolValue = false;
        result.boolValue_ = false;
        return this;
      }
      
      // optional .UUID uuidValue = 6;
      public boolean hasUuidValue() {
        return result.hasUuidValue();
      }
      public org.photovault.common.Types.UUID getUuidValue() {
        return result.getUuidValue();
      }
      public Builder setUuidValue(org.photovault.common.Types.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasUuidValue = true;
        result.uuidValue_ = value;
        return this;
      }
      public Builder setUuidValue(org.photovault.common.Types.UUID.Builder builderForValue) {
        result.hasUuidValue = true;
        result.uuidValue_ = builderForValue.build();
        return this;
      }
      public Builder mergeUuidValue(org.photovault.common.Types.UUID value) {
        if (result.hasUuidValue() &&
            result.uuidValue_ != org.photovault.common.Types.UUID.getDefaultInstance()) {
          result.uuidValue_ =
            org.photovault.common.Types.UUID.newBuilder(result.uuidValue_).mergeFrom(value).buildPartial();
        } else {
          result.uuidValue_ = value;
        }
        result.hasUuidValue = true;
        return this;
      }
      public Builder clearUuidValue() {
        result.hasUuidValue = false;
        result.uuidValue_ = org.photovault.common.Types.UUID.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ValueChange)
    }
    
    static {
      defaultInstance = new ValueChange(true);
      org.photovault.replication.ChangeProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ValueChange)
  }
  
  public static final class SetChange extends
      com.google.protobuf.GeneratedMessage {
    // Use SetChange.newBuilder() to construct.
    private SetChange() {
      initFields();
    }
    private SetChange(boolean noInit) {}
    
    private static final SetChange defaultInstance;
    public static SetChange getDefaultInstance() {
      return defaultInstance;
    }
    
    public SetChange getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.internal_static_SetChange_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.photovault.replication.ChangeProtos.internal_static_SetChange_fieldAccessorTable;
    }
    
    // repeated .ValueChange added = 1;
    public static final int ADDED_FIELD_NUMBER = 1;
    private java.util.List<org.photovault.replication.ChangeProtos.ValueChange> added_ =
      java.util.Collections.emptyList();
    public java.util.List<org.photovault.replication.ChangeProtos.ValueChange> getAddedList() {
      return added_;
    }
    public int getAddedCount() { return added_.size(); }
    public org.photovault.replication.ChangeProtos.ValueChange getAdded(int index) {
      return added_.get(index);
    }
    
    // repeated .ValueChange removed = 2;
    public static final int REMOVED_FIELD_NUMBER = 2;
    private java.util.List<org.photovault.replication.ChangeProtos.ValueChange> removed_ =
      java.util.Collections.emptyList();
    public java.util.List<org.photovault.replication.ChangeProtos.ValueChange> getRemovedList() {
      return removed_;
    }
    public int getRemovedCount() { return removed_.size(); }
    public org.photovault.replication.ChangeProtos.ValueChange getRemoved(int index) {
      return removed_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (org.photovault.replication.ChangeProtos.ValueChange element : getAddedList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.photovault.replication.ChangeProtos.ValueChange element : getRemovedList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (org.photovault.replication.ChangeProtos.ValueChange element : getAddedList()) {
        output.writeMessage(1, element);
      }
      for (org.photovault.replication.ChangeProtos.ValueChange element : getRemovedList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (org.photovault.replication.ChangeProtos.ValueChange element : getAddedList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (org.photovault.replication.ChangeProtos.ValueChange element : getRemovedList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.SetChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.photovault.replication.ChangeProtos.SetChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.photovault.replication.ChangeProtos.SetChange result;
      
      // Construct using org.photovault.replication.ChangeProtos.SetChange.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.photovault.replication.ChangeProtos.SetChange();
        return builder;
      }
      
      protected org.photovault.replication.ChangeProtos.SetChange internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.photovault.replication.ChangeProtos.SetChange();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.photovault.replication.ChangeProtos.SetChange.getDescriptor();
      }
      
      public org.photovault.replication.ChangeProtos.SetChange getDefaultInstanceForType() {
        return org.photovault.replication.ChangeProtos.SetChange.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.photovault.replication.ChangeProtos.SetChange build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.photovault.replication.ChangeProtos.SetChange buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.photovault.replication.ChangeProtos.SetChange buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.added_ != java.util.Collections.EMPTY_LIST) {
          result.added_ =
            java.util.Collections.unmodifiableList(result.added_);
        }
        if (result.removed_ != java.util.Collections.EMPTY_LIST) {
          result.removed_ =
            java.util.Collections.unmodifiableList(result.removed_);
        }
        org.photovault.replication.ChangeProtos.SetChange returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.photovault.replication.ChangeProtos.SetChange) {
          return mergeFrom((org.photovault.replication.ChangeProtos.SetChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.photovault.replication.ChangeProtos.SetChange other) {
        if (other == org.photovault.replication.ChangeProtos.SetChange.getDefaultInstance()) return this;
        if (!other.added_.isEmpty()) {
          if (result.added_.isEmpty()) {
            result.added_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
          }
          result.added_.addAll(other.added_);
        }
        if (!other.removed_.isEmpty()) {
          if (result.removed_.isEmpty()) {
            result.removed_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
          }
          result.removed_.addAll(other.removed_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.photovault.replication.ChangeProtos.ValueChange.Builder subBuilder = org.photovault.replication.ChangeProtos.ValueChange.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAdded(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.photovault.replication.ChangeProtos.ValueChange.Builder subBuilder = org.photovault.replication.ChangeProtos.ValueChange.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRemoved(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .ValueChange added = 1;
      public java.util.List<org.photovault.replication.ChangeProtos.ValueChange> getAddedList() {
        return java.util.Collections.unmodifiableList(result.added_);
      }
      public int getAddedCount() {
        return result.getAddedCount();
      }
      public org.photovault.replication.ChangeProtos.ValueChange getAdded(int index) {
        return result.getAdded(index);
      }
      public Builder setAdded(int index, org.photovault.replication.ChangeProtos.ValueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.added_.set(index, value);
        return this;
      }
      public Builder setAdded(int index, org.photovault.replication.ChangeProtos.ValueChange.Builder builderForValue) {
        result.added_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAdded(org.photovault.replication.ChangeProtos.ValueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.added_.isEmpty()) {
          result.added_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        result.added_.add(value);
        return this;
      }
      public Builder addAdded(org.photovault.replication.ChangeProtos.ValueChange.Builder builderForValue) {
        if (result.added_.isEmpty()) {
          result.added_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        result.added_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAdded(
          java.lang.Iterable<? extends org.photovault.replication.ChangeProtos.ValueChange> values) {
        if (result.added_.isEmpty()) {
          result.added_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        super.addAll(values, result.added_);
        return this;
      }
      public Builder clearAdded() {
        result.added_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .ValueChange removed = 2;
      public java.util.List<org.photovault.replication.ChangeProtos.ValueChange> getRemovedList() {
        return java.util.Collections.unmodifiableList(result.removed_);
      }
      public int getRemovedCount() {
        return result.getRemovedCount();
      }
      public org.photovault.replication.ChangeProtos.ValueChange getRemoved(int index) {
        return result.getRemoved(index);
      }
      public Builder setRemoved(int index, org.photovault.replication.ChangeProtos.ValueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.removed_.set(index, value);
        return this;
      }
      public Builder setRemoved(int index, org.photovault.replication.ChangeProtos.ValueChange.Builder builderForValue) {
        result.removed_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRemoved(org.photovault.replication.ChangeProtos.ValueChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.removed_.isEmpty()) {
          result.removed_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        result.removed_.add(value);
        return this;
      }
      public Builder addRemoved(org.photovault.replication.ChangeProtos.ValueChange.Builder builderForValue) {
        if (result.removed_.isEmpty()) {
          result.removed_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        result.removed_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRemoved(
          java.lang.Iterable<? extends org.photovault.replication.ChangeProtos.ValueChange> values) {
        if (result.removed_.isEmpty()) {
          result.removed_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.ValueChange>();
        }
        super.addAll(values, result.removed_);
        return this;
      }
      public Builder clearRemoved() {
        result.removed_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SetChange)
    }
    
    static {
      defaultInstance = new SetChange(true);
      org.photovault.replication.ChangeProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SetChange)
  }
  
  public static final class Change extends
      com.google.protobuf.GeneratedMessage {
    // Use Change.newBuilder() to construct.
    private Change() {
      initFields();
    }
    private Change(boolean noInit) {}
    
    private static final Change defaultInstance;
    public static Change getDefaultInstance() {
      return defaultInstance;
    }
    
    public Change getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.internal_static_Change_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.photovault.replication.ChangeProtos.internal_static_Change_fieldAccessorTable;
    }
    
    // required string targetClassName = 1;
    public static final int TARGETCLASSNAME_FIELD_NUMBER = 1;
    private boolean hasTargetClassName;
    private java.lang.String targetClassName_ = "";
    public boolean hasTargetClassName() { return hasTargetClassName; }
    public java.lang.String getTargetClassName() { return targetClassName_; }
    
    // optional .UUID targetUUID = 2;
    public static final int TARGETUUID_FIELD_NUMBER = 2;
    private boolean hasTargetUUID;
    private org.photovault.common.Types.UUID targetUUID_;
    public boolean hasTargetUUID() { return hasTargetUUID; }
    public org.photovault.common.Types.UUID getTargetUUID() { return targetUUID_; }
    
    // repeated .UUID parentIds = 3;
    public static final int PARENTIDS_FIELD_NUMBER = 3;
    private java.util.List<org.photovault.common.Types.UUID> parentIds_ =
      java.util.Collections.emptyList();
    public java.util.List<org.photovault.common.Types.UUID> getParentIdsList() {
      return parentIds_;
    }
    public int getParentIdsCount() { return parentIds_.size(); }
    public org.photovault.common.Types.UUID getParentIds(int index) {
      return parentIds_.get(index);
    }
    
    // repeated .FieldChange fieldChanges = 4;
    public static final int FIELDCHANGES_FIELD_NUMBER = 4;
    private java.util.List<org.photovault.replication.ChangeProtos.FieldChange> fieldChanges_ =
      java.util.Collections.emptyList();
    public java.util.List<org.photovault.replication.ChangeProtos.FieldChange> getFieldChangesList() {
      return fieldChanges_;
    }
    public int getFieldChangesCount() { return fieldChanges_.size(); }
    public org.photovault.replication.ChangeProtos.FieldChange getFieldChanges(int index) {
      return fieldChanges_.get(index);
    }
    
    private void initFields() {
      targetUUID_ = org.photovault.common.Types.UUID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTargetClassName) return false;
      if (hasTargetUUID()) {
        if (!getTargetUUID().isInitialized()) return false;
      }
      for (org.photovault.common.Types.UUID element : getParentIdsList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.photovault.replication.ChangeProtos.FieldChange element : getFieldChangesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTargetClassName()) {
        output.writeString(1, getTargetClassName());
      }
      if (hasTargetUUID()) {
        output.writeMessage(2, getTargetUUID());
      }
      for (org.photovault.common.Types.UUID element : getParentIdsList()) {
        output.writeMessage(3, element);
      }
      for (org.photovault.replication.ChangeProtos.FieldChange element : getFieldChangesList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTargetClassName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTargetClassName());
      }
      if (hasTargetUUID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTargetUUID());
      }
      for (org.photovault.common.Types.UUID element : getParentIdsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (org.photovault.replication.ChangeProtos.FieldChange element : getFieldChangesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.Change parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.Change parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.photovault.replication.ChangeProtos.Change prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.photovault.replication.ChangeProtos.Change result;
      
      // Construct using org.photovault.replication.ChangeProtos.Change.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.photovault.replication.ChangeProtos.Change();
        return builder;
      }
      
      protected org.photovault.replication.ChangeProtos.Change internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.photovault.replication.ChangeProtos.Change();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.photovault.replication.ChangeProtos.Change.getDescriptor();
      }
      
      public org.photovault.replication.ChangeProtos.Change getDefaultInstanceForType() {
        return org.photovault.replication.ChangeProtos.Change.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.photovault.replication.ChangeProtos.Change build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.photovault.replication.ChangeProtos.Change buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.photovault.replication.ChangeProtos.Change buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.parentIds_ != java.util.Collections.EMPTY_LIST) {
          result.parentIds_ =
            java.util.Collections.unmodifiableList(result.parentIds_);
        }
        if (result.fieldChanges_ != java.util.Collections.EMPTY_LIST) {
          result.fieldChanges_ =
            java.util.Collections.unmodifiableList(result.fieldChanges_);
        }
        org.photovault.replication.ChangeProtos.Change returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.photovault.replication.ChangeProtos.Change) {
          return mergeFrom((org.photovault.replication.ChangeProtos.Change)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.photovault.replication.ChangeProtos.Change other) {
        if (other == org.photovault.replication.ChangeProtos.Change.getDefaultInstance()) return this;
        if (other.hasTargetClassName()) {
          setTargetClassName(other.getTargetClassName());
        }
        if (other.hasTargetUUID()) {
          mergeTargetUUID(other.getTargetUUID());
        }
        if (!other.parentIds_.isEmpty()) {
          if (result.parentIds_.isEmpty()) {
            result.parentIds_ = new java.util.ArrayList<org.photovault.common.Types.UUID>();
          }
          result.parentIds_.addAll(other.parentIds_);
        }
        if (!other.fieldChanges_.isEmpty()) {
          if (result.fieldChanges_.isEmpty()) {
            result.fieldChanges_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.FieldChange>();
          }
          result.fieldChanges_.addAll(other.fieldChanges_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTargetClassName(input.readString());
              break;
            }
            case 18: {
              org.photovault.common.Types.UUID.Builder subBuilder = org.photovault.common.Types.UUID.newBuilder();
              if (hasTargetUUID()) {
                subBuilder.mergeFrom(getTargetUUID());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTargetUUID(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.photovault.common.Types.UUID.Builder subBuilder = org.photovault.common.Types.UUID.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addParentIds(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.photovault.replication.ChangeProtos.FieldChange.Builder subBuilder = org.photovault.replication.ChangeProtos.FieldChange.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldChanges(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string targetClassName = 1;
      public boolean hasTargetClassName() {
        return result.hasTargetClassName();
      }
      public java.lang.String getTargetClassName() {
        return result.getTargetClassName();
      }
      public Builder setTargetClassName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTargetClassName = true;
        result.targetClassName_ = value;
        return this;
      }
      public Builder clearTargetClassName() {
        result.hasTargetClassName = false;
        result.targetClassName_ = getDefaultInstance().getTargetClassName();
        return this;
      }
      
      // optional .UUID targetUUID = 2;
      public boolean hasTargetUUID() {
        return result.hasTargetUUID();
      }
      public org.photovault.common.Types.UUID getTargetUUID() {
        return result.getTargetUUID();
      }
      public Builder setTargetUUID(org.photovault.common.Types.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetUUID = true;
        result.targetUUID_ = value;
        return this;
      }
      public Builder setTargetUUID(org.photovault.common.Types.UUID.Builder builderForValue) {
        result.hasTargetUUID = true;
        result.targetUUID_ = builderForValue.build();
        return this;
      }
      public Builder mergeTargetUUID(org.photovault.common.Types.UUID value) {
        if (result.hasTargetUUID() &&
            result.targetUUID_ != org.photovault.common.Types.UUID.getDefaultInstance()) {
          result.targetUUID_ =
            org.photovault.common.Types.UUID.newBuilder(result.targetUUID_).mergeFrom(value).buildPartial();
        } else {
          result.targetUUID_ = value;
        }
        result.hasTargetUUID = true;
        return this;
      }
      public Builder clearTargetUUID() {
        result.hasTargetUUID = false;
        result.targetUUID_ = org.photovault.common.Types.UUID.getDefaultInstance();
        return this;
      }
      
      // repeated .UUID parentIds = 3;
      public java.util.List<org.photovault.common.Types.UUID> getParentIdsList() {
        return java.util.Collections.unmodifiableList(result.parentIds_);
      }
      public int getParentIdsCount() {
        return result.getParentIdsCount();
      }
      public org.photovault.common.Types.UUID getParentIds(int index) {
        return result.getParentIds(index);
      }
      public Builder setParentIds(int index, org.photovault.common.Types.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.parentIds_.set(index, value);
        return this;
      }
      public Builder setParentIds(int index, org.photovault.common.Types.UUID.Builder builderForValue) {
        result.parentIds_.set(index, builderForValue.build());
        return this;
      }
      public Builder addParentIds(org.photovault.common.Types.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.parentIds_.isEmpty()) {
          result.parentIds_ = new java.util.ArrayList<org.photovault.common.Types.UUID>();
        }
        result.parentIds_.add(value);
        return this;
      }
      public Builder addParentIds(org.photovault.common.Types.UUID.Builder builderForValue) {
        if (result.parentIds_.isEmpty()) {
          result.parentIds_ = new java.util.ArrayList<org.photovault.common.Types.UUID>();
        }
        result.parentIds_.add(builderForValue.build());
        return this;
      }
      public Builder addAllParentIds(
          java.lang.Iterable<? extends org.photovault.common.Types.UUID> values) {
        if (result.parentIds_.isEmpty()) {
          result.parentIds_ = new java.util.ArrayList<org.photovault.common.Types.UUID>();
        }
        super.addAll(values, result.parentIds_);
        return this;
      }
      public Builder clearParentIds() {
        result.parentIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FieldChange fieldChanges = 4;
      public java.util.List<org.photovault.replication.ChangeProtos.FieldChange> getFieldChangesList() {
        return java.util.Collections.unmodifiableList(result.fieldChanges_);
      }
      public int getFieldChangesCount() {
        return result.getFieldChangesCount();
      }
      public org.photovault.replication.ChangeProtos.FieldChange getFieldChanges(int index) {
        return result.getFieldChanges(index);
      }
      public Builder setFieldChanges(int index, org.photovault.replication.ChangeProtos.FieldChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.fieldChanges_.set(index, value);
        return this;
      }
      public Builder setFieldChanges(int index, org.photovault.replication.ChangeProtos.FieldChange.Builder builderForValue) {
        result.fieldChanges_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFieldChanges(org.photovault.replication.ChangeProtos.FieldChange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.fieldChanges_.isEmpty()) {
          result.fieldChanges_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.FieldChange>();
        }
        result.fieldChanges_.add(value);
        return this;
      }
      public Builder addFieldChanges(org.photovault.replication.ChangeProtos.FieldChange.Builder builderForValue) {
        if (result.fieldChanges_.isEmpty()) {
          result.fieldChanges_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.FieldChange>();
        }
        result.fieldChanges_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFieldChanges(
          java.lang.Iterable<? extends org.photovault.replication.ChangeProtos.FieldChange> values) {
        if (result.fieldChanges_.isEmpty()) {
          result.fieldChanges_ = new java.util.ArrayList<org.photovault.replication.ChangeProtos.FieldChange>();
        }
        super.addAll(values, result.fieldChanges_);
        return this;
      }
      public Builder clearFieldChanges() {
        result.fieldChanges_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Change)
    }
    
    static {
      defaultInstance = new Change(true);
      org.photovault.replication.ChangeProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Change)
  }
  
  public static final class ChangeEnvelope extends
      com.google.protobuf.GeneratedMessage {
    // Use ChangeEnvelope.newBuilder() to construct.
    private ChangeEnvelope() {
      initFields();
    }
    private ChangeEnvelope(boolean noInit) {}
    
    private static final ChangeEnvelope defaultInstance;
    public static ChangeEnvelope getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChangeEnvelope getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.photovault.replication.ChangeProtos.internal_static_ChangeEnvelope_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.photovault.replication.ChangeProtos.internal_static_ChangeEnvelope_fieldAccessorTable;
    }
    
    // required .UUID changeId = 1;
    public static final int CHANGEID_FIELD_NUMBER = 1;
    private boolean hasChangeId;
    private org.photovault.common.Types.UUID changeId_;
    public boolean hasChangeId() { return hasChangeId; }
    public org.photovault.common.Types.UUID getChangeId() { return changeId_; }
    
    // required bytes serializedChange = 2;
    public static final int SERIALIZEDCHANGE_FIELD_NUMBER = 2;
    private boolean hasSerializedChange;
    private com.google.protobuf.ByteString serializedChange_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasSerializedChange() { return hasSerializedChange; }
    public com.google.protobuf.ByteString getSerializedChange() { return serializedChange_; }
    
    // optional string creatorName = 3;
    public static final int CREATORNAME_FIELD_NUMBER = 3;
    private boolean hasCreatorName;
    private java.lang.String creatorName_ = "";
    public boolean hasCreatorName() { return hasCreatorName; }
    public java.lang.String getCreatorName() { return creatorName_; }
    
    // optional string creatorEmail = 4;
    public static final int CREATOREMAIL_FIELD_NUMBER = 4;
    private boolean hasCreatorEmail;
    private java.lang.String creatorEmail_ = "";
    public boolean hasCreatorEmail() { return hasCreatorEmail; }
    public java.lang.String getCreatorEmail() { return creatorEmail_; }
    
    // optional string comment = 5;
    public static final int COMMENT_FIELD_NUMBER = 5;
    private boolean hasComment;
    private java.lang.String comment_ = "";
    public boolean hasComment() { return hasComment; }
    public java.lang.String getComment() { return comment_; }
    
    // optional int64 createTime = 6;
    public static final int CREATETIME_FIELD_NUMBER = 6;
    private boolean hasCreateTime;
    private long createTime_ = 0L;
    public boolean hasCreateTime() { return hasCreateTime; }
    public long getCreateTime() { return createTime_; }
    
    // repeated bytes signatures = 7;
    public static final int SIGNATURES_FIELD_NUMBER = 7;
    private java.util.List<com.google.protobuf.ByteString> signatures_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getSignaturesList() {
      return signatures_;
    }
    public int getSignaturesCount() { return signatures_.size(); }
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }
    
    private void initFields() {
      changeId_ = org.photovault.common.Types.UUID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasChangeId) return false;
      if (!hasSerializedChange) return false;
      if (!getChangeId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChangeId()) {
        output.writeMessage(1, getChangeId());
      }
      if (hasSerializedChange()) {
        output.writeBytes(2, getSerializedChange());
      }
      if (hasCreatorName()) {
        output.writeString(3, getCreatorName());
      }
      if (hasCreatorEmail()) {
        output.writeString(4, getCreatorEmail());
      }
      if (hasComment()) {
        output.writeString(5, getComment());
      }
      if (hasCreateTime()) {
        output.writeInt64(6, getCreateTime());
      }
      for (com.google.protobuf.ByteString element : getSignaturesList()) {
        output.writeBytes(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChangeId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChangeId());
      }
      if (hasSerializedChange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSerializedChange());
      }
      if (hasCreatorName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getCreatorName());
      }
      if (hasCreatorEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCreatorEmail());
      }
      if (hasComment()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getComment());
      }
      if (hasCreateTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getCreateTime());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getSignaturesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSignaturesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.photovault.replication.ChangeProtos.ChangeEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.photovault.replication.ChangeProtos.ChangeEnvelope prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.photovault.replication.ChangeProtos.ChangeEnvelope result;
      
      // Construct using org.photovault.replication.ChangeProtos.ChangeEnvelope.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.photovault.replication.ChangeProtos.ChangeEnvelope();
        return builder;
      }
      
      protected org.photovault.replication.ChangeProtos.ChangeEnvelope internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.photovault.replication.ChangeProtos.ChangeEnvelope();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.photovault.replication.ChangeProtos.ChangeEnvelope.getDescriptor();
      }
      
      public org.photovault.replication.ChangeProtos.ChangeEnvelope getDefaultInstanceForType() {
        return org.photovault.replication.ChangeProtos.ChangeEnvelope.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.photovault.replication.ChangeProtos.ChangeEnvelope build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.photovault.replication.ChangeProtos.ChangeEnvelope buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.photovault.replication.ChangeProtos.ChangeEnvelope buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.signatures_ != java.util.Collections.EMPTY_LIST) {
          result.signatures_ =
            java.util.Collections.unmodifiableList(result.signatures_);
        }
        org.photovault.replication.ChangeProtos.ChangeEnvelope returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.photovault.replication.ChangeProtos.ChangeEnvelope) {
          return mergeFrom((org.photovault.replication.ChangeProtos.ChangeEnvelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.photovault.replication.ChangeProtos.ChangeEnvelope other) {
        if (other == org.photovault.replication.ChangeProtos.ChangeEnvelope.getDefaultInstance()) return this;
        if (other.hasChangeId()) {
          mergeChangeId(other.getChangeId());
        }
        if (other.hasSerializedChange()) {
          setSerializedChange(other.getSerializedChange());
        }
        if (other.hasCreatorName()) {
          setCreatorName(other.getCreatorName());
        }
        if (other.hasCreatorEmail()) {
          setCreatorEmail(other.getCreatorEmail());
        }
        if (other.hasComment()) {
          setComment(other.getComment());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (!other.signatures_.isEmpty()) {
          if (result.signatures_.isEmpty()) {
            result.signatures_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.signatures_.addAll(other.signatures_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.photovault.common.Types.UUID.Builder subBuilder = org.photovault.common.Types.UUID.newBuilder();
              if (hasChangeId()) {
                subBuilder.mergeFrom(getChangeId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChangeId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setSerializedChange(input.readBytes());
              break;
            }
            case 26: {
              setCreatorName(input.readString());
              break;
            }
            case 34: {
              setCreatorEmail(input.readString());
              break;
            }
            case 42: {
              setComment(input.readString());
              break;
            }
            case 48: {
              setCreateTime(input.readInt64());
              break;
            }
            case 58: {
              addSignatures(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .UUID changeId = 1;
      public boolean hasChangeId() {
        return result.hasChangeId();
      }
      public org.photovault.common.Types.UUID getChangeId() {
        return result.getChangeId();
      }
      public Builder setChangeId(org.photovault.common.Types.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChangeId = true;
        result.changeId_ = value;
        return this;
      }
      public Builder setChangeId(org.photovault.common.Types.UUID.Builder builderForValue) {
        result.hasChangeId = true;
        result.changeId_ = builderForValue.build();
        return this;
      }
      public Builder mergeChangeId(org.photovault.common.Types.UUID value) {
        if (result.hasChangeId() &&
            result.changeId_ != org.photovault.common.Types.UUID.getDefaultInstance()) {
          result.changeId_ =
            org.photovault.common.Types.UUID.newBuilder(result.changeId_).mergeFrom(value).buildPartial();
        } else {
          result.changeId_ = value;
        }
        result.hasChangeId = true;
        return this;
      }
      public Builder clearChangeId() {
        result.hasChangeId = false;
        result.changeId_ = org.photovault.common.Types.UUID.getDefaultInstance();
        return this;
      }
      
      // required bytes serializedChange = 2;
      public boolean hasSerializedChange() {
        return result.hasSerializedChange();
      }
      public com.google.protobuf.ByteString getSerializedChange() {
        return result.getSerializedChange();
      }
      public Builder setSerializedChange(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSerializedChange = true;
        result.serializedChange_ = value;
        return this;
      }
      public Builder clearSerializedChange() {
        result.hasSerializedChange = false;
        result.serializedChange_ = getDefaultInstance().getSerializedChange();
        return this;
      }
      
      // optional string creatorName = 3;
      public boolean hasCreatorName() {
        return result.hasCreatorName();
      }
      public java.lang.String getCreatorName() {
        return result.getCreatorName();
      }
      public Builder setCreatorName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreatorName = true;
        result.creatorName_ = value;
        return this;
      }
      public Builder clearCreatorName() {
        result.hasCreatorName = false;
        result.creatorName_ = getDefaultInstance().getCreatorName();
        return this;
      }
      
      // optional string creatorEmail = 4;
      public boolean hasCreatorEmail() {
        return result.hasCreatorEmail();
      }
      public java.lang.String getCreatorEmail() {
        return result.getCreatorEmail();
      }
      public Builder setCreatorEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreatorEmail = true;
        result.creatorEmail_ = value;
        return this;
      }
      public Builder clearCreatorEmail() {
        result.hasCreatorEmail = false;
        result.creatorEmail_ = getDefaultInstance().getCreatorEmail();
        return this;
      }
      
      // optional string comment = 5;
      public boolean hasComment() {
        return result.hasComment();
      }
      public java.lang.String getComment() {
        return result.getComment();
      }
      public Builder setComment(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasComment = true;
        result.comment_ = value;
        return this;
      }
      public Builder clearComment() {
        result.hasComment = false;
        result.comment_ = getDefaultInstance().getComment();
        return this;
      }
      
      // optional int64 createTime = 6;
      public boolean hasCreateTime() {
        return result.hasCreateTime();
      }
      public long getCreateTime() {
        return result.getCreateTime();
      }
      public Builder setCreateTime(long value) {
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder clearCreateTime() {
        result.hasCreateTime = false;
        result.createTime_ = 0L;
        return this;
      }
      
      // repeated bytes signatures = 7;
      public java.util.List<com.google.protobuf.ByteString> getSignaturesList() {
        return java.util.Collections.unmodifiableList(result.signatures_);
      }
      public int getSignaturesCount() {
        return result.getSignaturesCount();
      }
      public com.google.protobuf.ByteString getSignatures(int index) {
        return result.getSignatures(index);
      }
      public Builder setSignatures(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.signatures_.set(index, value);
        return this;
      }
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.signatures_.isEmpty()) {
          result.signatures_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.signatures_.add(value);
        return this;
      }
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.signatures_.isEmpty()) {
          result.signatures_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.signatures_);
        return this;
      }
      public Builder clearSignatures() {
        result.signatures_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ChangeEnvelope)
    }
    
    static {
      defaultInstance = new ChangeEnvelope(true);
      org.photovault.replication.ChangeProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ChangeEnvelope)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FieldChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FieldChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ValueChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ValueChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SetChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SetChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Change_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Change_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ChangeEnvelope_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ChangeEnvelope_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023change_protos.proto\032\013types.proto\"\202\001\n\013F" +
      "ieldChange\022\036\n\004type\030\001 \002(\0162\020.FieldChangeTy" +
      "pe\022\021\n\tfieldName\030\002 \002(\t\022!\n\013valueChange\030\003 \001" +
      "(\0132\014.ValueChange\022\035\n\tsetChange\030\004 \001(\0132\n.Se" +
      "tChange\"\216\001\n\013ValueChange\022\014\n\004type\030\001 \002(\005\022\020\n" +
      "\010intValue\030\002 \001(\005\022\023\n\013doubleValue\030\003 \001(\001\022\023\n\013" +
      "stringValue\030\004 \001(\t\022\021\n\tboolValue\030\005 \001(\010\022\030\n\t" +
      "uuidValue\030\006 \001(\0132\005.UUID*\010\010d\020\200\200\200\200\002\"G\n\tSetC" +
      "hange\022\033\n\005added\030\001 \003(\0132\014.ValueChange\022\035\n\007re" +
      "moved\030\002 \003(\0132\014.ValueChange\"z\n\006Change\022\027\n\017t",
      "argetClassName\030\001 \002(\t\022\031\n\ntargetUUID\030\002 \001(\013" +
      "2\005.UUID\022\030\n\tparentIds\030\003 \003(\0132\005.UUID\022\"\n\014fie" +
      "ldChanges\030\004 \003(\0132\014.FieldChange\"\247\001\n\016Change" +
      "Envelope\022\027\n\010changeId\030\001 \002(\0132\005.UUID\022\030\n\020ser" +
      "ializedChange\030\002 \002(\014\022\023\n\013creatorName\030\003 \001(\t" +
      "\022\024\n\014creatorEmail\030\004 \001(\t\022\017\n\007comment\030\005 \001(\t\022" +
      "\022\n\ncreateTime\030\006 \001(\003\022\022\n\nsignatures\030\007 \003(\014*" +
      "3\n\017FieldChangeType\022\020\n\014VALUE_CHANGE\020\001\022\016\n\n" +
      "SET_CHANGE\020\002B\037\n\032org.photovault.replicati" +
      "on\210\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FieldChange_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FieldChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FieldChange_descriptor,
              new java.lang.String[] { "Type", "FieldName", "ValueChange", "SetChange", },
              org.photovault.replication.ChangeProtos.FieldChange.class,
              org.photovault.replication.ChangeProtos.FieldChange.Builder.class);
          internal_static_ValueChange_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ValueChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ValueChange_descriptor,
              new java.lang.String[] { "Type", "IntValue", "DoubleValue", "StringValue", "BoolValue", "UuidValue", },
              org.photovault.replication.ChangeProtos.ValueChange.class,
              org.photovault.replication.ChangeProtos.ValueChange.Builder.class);
          internal_static_SetChange_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_SetChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SetChange_descriptor,
              new java.lang.String[] { "Added", "Removed", },
              org.photovault.replication.ChangeProtos.SetChange.class,
              org.photovault.replication.ChangeProtos.SetChange.Builder.class);
          internal_static_Change_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Change_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Change_descriptor,
              new java.lang.String[] { "TargetClassName", "TargetUUID", "ParentIds", "FieldChanges", },
              org.photovault.replication.ChangeProtos.Change.class,
              org.photovault.replication.ChangeProtos.Change.Builder.class);
          internal_static_ChangeEnvelope_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ChangeEnvelope_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ChangeEnvelope_descriptor,
              new java.lang.String[] { "ChangeId", "SerializedChange", "CreatorName", "CreatorEmail", "Comment", "CreateTime", "Signatures", },
              org.photovault.replication.ChangeProtos.ChangeEnvelope.class,
              org.photovault.replication.ChangeProtos.ChangeEnvelope.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.photovault.common.Types.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
